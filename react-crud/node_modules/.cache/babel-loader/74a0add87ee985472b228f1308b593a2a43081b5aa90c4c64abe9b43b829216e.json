{"ast":null,"code":"const API_URL = \"http://localhost:8000/api/computers/\";\nexport const listComputers = async () => {\n  return await fetch(API_URL);\n};\nexport const getComputerServer = async computerId => {\n  return await fetch(`${API_URL}${computerId}`);\n};\nexport const registerComputer = async newComputer => {\n  return await fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"name\": String(newComputer.name).trim(),\n      \"id_computer\": String(newComputer.id_computer).trim(),\n      \"id_monitor\": String(newComputer.id_monitor).trim(),\n      \"anydesk\": String(newComputer.anydesk).trim(),\n      \"swi\": parseInt(newComputer.swi),\n      \"puert\": parseInt(newComputer.puert),\n      \"ip\": String(newComputer.ip).trim()\n    })\n  });\n};\nexport const updateComputer = async (computerId, updateComputer) => {\n  return await fetch(`${API_URL}${computerId}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"name\": String(updateComputer.name).trim(),\n      \"id_computer\": String(updateComputer.id_computer).trim(),\n      \"id_monitor\": String(updateComputer.id_monitor).trim(),\n      \"anydesk\": String(updateComputer.anydesk).trim(),\n      \"swi\": parseInt(updateComputer.swi),\n      \"puert\": parseInt(updateComputer.puert),\n      \"ip\": String(updateComputer.ip).trim()\n    })\n  });\n};\nexport const deleteComputer = async computerId => {\n  return await fetch(`${API_URL}${computerId}`, {\n    method: 'DELETE'\n  });\n};","map":{"version":3,"names":["API_URL","listComputers","fetch","getComputerServer","computerId","registerComputer","newComputer","method","headers","body","JSON","stringify","String","name","trim","id_computer","id_monitor","anydesk","parseInt","swi","puert","ip","updateComputer","deleteComputer"],"sources":["C:/Users/aaquino/Desktop/react-crud/src/Components/ComputerServer.js"],"sourcesContent":["const API_URL =\"http://localhost:8000/api/computers/\"\r\n\r\nexport const listComputers= async()=>{\r\n    return await fetch(API_URL);\r\n};\r\n\r\nexport const getComputerServer = async(computerId) =>{\r\n    return await fetch(`${API_URL}${computerId}`)\r\n}\r\n\r\n\r\nexport const registerComputer = async (newComputer)=>{\r\n    return await fetch(API_URL,{\r\n        method:'POST',\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        },\r\n        body:JSON.stringify({\r\n            \"name\":String(newComputer.name).trim(),\r\n            \"id_computer\":String(newComputer.id_computer).trim(),\r\n            \"id_monitor\":String(newComputer.id_monitor).trim(),\r\n            \"anydesk\":String(newComputer.anydesk).trim(),\r\n            \"swi\":parseInt(newComputer.swi),\r\n            \"puert\":parseInt(newComputer.puert),\r\n            \"ip\":String(newComputer.ip).trim()\r\n        })\r\n    });\r\n}\r\n\r\nexport const updateComputer = async (computerId,updateComputer)=>{\r\n    return await fetch(`${API_URL}${computerId}`,{\r\n        method:'PUT',\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        },\r\n        body:JSON.stringify({\r\n            \"name\":String(updateComputer.name).trim(),\r\n            \"id_computer\":String(updateComputer.id_computer).trim(),\r\n            \"id_monitor\":String(updateComputer.id_monitor).trim(),\r\n            \"anydesk\":String(updateComputer.anydesk).trim(),\r\n            \"swi\":parseInt(updateComputer.swi),\r\n            \"puert\":parseInt(updateComputer.puert),\r\n            \"ip\":String(updateComputer.ip).trim()\r\n        })\r\n    });\r\n}\r\n\r\n\r\nexport const deleteComputer = async (computerId) =>{\r\n    return await fetch(`${API_URL}${computerId}`,{\r\n        method:'DELETE'\r\n    })\r\n}"],"mappings":"AAAA,MAAMA,OAAO,GAAE,sCAAsC;AAErD,OAAO,MAAMC,aAAa,GAAE,YAAS;EACjC,OAAO,MAAMC,KAAK,CAACF,OAAO,CAAC;AAC/B,CAAC;AAED,OAAO,MAAMG,iBAAiB,GAAG,MAAMC,UAAU,IAAI;EACjD,OAAO,MAAMF,KAAK,CAAE,GAAEF,OAAQ,GAAEI,UAAW,EAAC,CAAC;AACjD,CAAC;AAGD,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,WAAW,IAAG;EACjD,OAAO,MAAMJ,KAAK,CAACF,OAAO,EAAC;IACvBO,MAAM,EAAC,MAAM;IACbC,OAAO,EAAC;MACJ,cAAc,EAAC;IACnB,CAAC;IACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAAC;MAChB,MAAM,EAACC,MAAM,CAACN,WAAW,CAACO,IAAI,CAAC,CAACC,IAAI,EAAE;MACtC,aAAa,EAACF,MAAM,CAACN,WAAW,CAACS,WAAW,CAAC,CAACD,IAAI,EAAE;MACpD,YAAY,EAACF,MAAM,CAACN,WAAW,CAACU,UAAU,CAAC,CAACF,IAAI,EAAE;MAClD,SAAS,EAACF,MAAM,CAACN,WAAW,CAACW,OAAO,CAAC,CAACH,IAAI,EAAE;MAC5C,KAAK,EAACI,QAAQ,CAACZ,WAAW,CAACa,GAAG,CAAC;MAC/B,OAAO,EAACD,QAAQ,CAACZ,WAAW,CAACc,KAAK,CAAC;MACnC,IAAI,EAACR,MAAM,CAACN,WAAW,CAACe,EAAE,CAAC,CAACP,IAAI;IACpC,CAAC;EACL,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMQ,cAAc,GAAG,OAAOlB,UAAU,EAACkB,cAAc,KAAG;EAC7D,OAAO,MAAMpB,KAAK,CAAE,GAAEF,OAAQ,GAAEI,UAAW,EAAC,EAAC;IACzCG,MAAM,EAAC,KAAK;IACZC,OAAO,EAAC;MACJ,cAAc,EAAC;IACnB,CAAC;IACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAAC;MAChB,MAAM,EAACC,MAAM,CAACU,cAAc,CAACT,IAAI,CAAC,CAACC,IAAI,EAAE;MACzC,aAAa,EAACF,MAAM,CAACU,cAAc,CAACP,WAAW,CAAC,CAACD,IAAI,EAAE;MACvD,YAAY,EAACF,MAAM,CAACU,cAAc,CAACN,UAAU,CAAC,CAACF,IAAI,EAAE;MACrD,SAAS,EAACF,MAAM,CAACU,cAAc,CAACL,OAAO,CAAC,CAACH,IAAI,EAAE;MAC/C,KAAK,EAACI,QAAQ,CAACI,cAAc,CAACH,GAAG,CAAC;MAClC,OAAO,EAACD,QAAQ,CAACI,cAAc,CAACF,KAAK,CAAC;MACtC,IAAI,EAACR,MAAM,CAACU,cAAc,CAACD,EAAE,CAAC,CAACP,IAAI;IACvC,CAAC;EACL,CAAC,CAAC;AACN,CAAC;AAGD,OAAO,MAAMS,cAAc,GAAG,MAAOnB,UAAU,IAAI;EAC/C,OAAO,MAAMF,KAAK,CAAE,GAAEF,OAAQ,GAAEI,UAAW,EAAC,EAAC;IACzCG,MAAM,EAAC;EACX,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}